<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Branch extends Admin_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Branch_model');
    } 

    /*
     * Listing of branch
     */
    function index()
    {
        $data['branch'] = $this->Branch_model->get_all_branch();
        $data['_view'] = 'branch/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new branch
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('branch_name','Branch Name','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'branch_name' => $this->input->post('branch_name'),
				'address' => $this->input->post('address')
			
            );
            
            $branch_id = $this->Branch_model->add_branch($params);
            redirect('branch/index');
        }
        else
        {
			// $this->load->model('Role_model');
			// $data['all_roles'] = $this->Role_model->get_all_roles();
            
            $data['_view'] = 'branch/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a branch
     */
    function edit($id)
    {   
        // check if the branch exists before trying to edit it
        $data['branch'] = $this->Branch_model->get_branch($id);
        
        if(isset($data['branch']['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('branch_name','Branch Name','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
                    'branch_name' => $this->input->post('branch_name'),
                    'address' => $this->input->post('address')
                );

                $this->Branch_model->update_branch($id,$params);            
                redirect('branch/index');
            }
            else
            {
                $data['_view'] = 'branch/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The branch you are trying to edit does not exist.');
    } 

    /*
     * Deleting branch
     */
    function remove($id)
    {
        $branch = $this->Branch_model->get_branch($id);

        // check if the branch exists before trying to delete it
        if(isset($branch['id']))
        {
            $this->Branch_model->delete_branch($id);
            redirect('branch/index');
        }
        else
            show_error('The branch you are trying to delete does not exist.');
    }
    
}
